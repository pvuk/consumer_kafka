spring.application.name=consumer_kafka
server.port=9030
server.servlet.context-path=/kafka

#Configuring Kafka in Spring Boot
#specifies the address of your Kafka broker
spring.kafka.bootstrap-servers=localhost:2182

#define multiple topics
kafka.topics[0]=my_topic
kafka.topics[1]=no-of-liters-filled
kafka.topics[2]=no-of-liters-remaining
kafka.topics[3]=topic-trace-bank

# This allows Spring to override duplicate beans, but it's not ideal for production unless you're sure it's safe.
#spring.main.allow-bean-definition-overriding=true

##specifies the consumer group ID for your application.
#spring.kafka.consumer.group-id=kafka-group-id
#spring.kafka.consumer.auto-offset-reset=earliest

#This setup ensures that failed messages are automatically published to a Dead Letter Topic using the KafkaTemplate.
# Consumer configuration
#spring.kafka.consumer.group-id=kafka-group-id
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer configuration
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

